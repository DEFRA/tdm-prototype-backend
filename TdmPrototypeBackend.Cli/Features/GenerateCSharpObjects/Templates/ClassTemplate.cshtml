@using RazorLight
@model TdmPrototypeBackend.Cli.Features.GenerateCSharpObjects.DescriptorModel.ClassDescriptor
@inherits TemplatePage<TdmPrototypeBackend.Cli.Features.GenerateCSharpObjects.DescriptorModel.ClassDescriptor>

using JsonApiDotNetCore.Resources.Annotations;
using Newtonsoft.Json;
using TdmPrototypeBackend.Types;


namespace TdmDataModel;

    /// <summary>
    /// @Model.Description
    /// </summary>
@if (Model.IsResource)
{
    <text>     [Resource] 
    </text>
}
public partial class @Model.GetClassName()  @if (Model.IsResource) { <text>: CustomStringMongoIdentifiable</text> }
{
@if (Model.IsResource)
{
    <text>
        // This field is used by the jsonapi-consumer to control the correct casing in the type field
        public string Type { get; set; } = "@Model.Name";
    </text>
}

@foreach(var property in Model.Properties)
{

    <text>
        /// <summary>
        /// @property.Description
        /// </summary>
        [Attr]
        [JsonProperty("@property.Name", NullValueHandling = NullValueHandling.Ignore)]
        public @property.GetPropertyType() @property.GetPropertyName() { get; set; }
    </text>
	
}

}


