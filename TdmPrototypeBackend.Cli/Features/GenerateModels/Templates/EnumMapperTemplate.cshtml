@using RazorLight
@using Microsoft.AspNetCore.Html;
@model TdmPrototypeBackend.Cli.Features.GenerateModels.DescriptorModel.EnumDescriptor
@inherits RazorLight.TemplatePage<TdmPrototypeBackend.Cli.Features.GenerateModels.DescriptorModel.EnumDescriptor>
@{
    DisableEncoding = true;
}
//------------------------------------------------------------------------------
// <auto-generated>
    //     This code was generated from a template.
    //
    //     Manual changes to this file may cause unexpected behavior in your application.
    //     Manual changes to this file will be overwritten if the code is regenerated.
    // </auto-generated>
//------------------------------------------------------------------------------
#nullable enable


namespace @Model.SourceNamespace;

public static class @Model.GetEnumName()Mapper
{
public static @Model.GetInternalFullEnumName() Map(@Model.GetSourceFullEnumName()? from)
{
if(from == null)
{
return default!;
}
return from switch
{
@foreach (var property in Model.Values)
{
	var entry = $"{@Model.GetSourceFullEnumName()}.{property.GetCSharpValue()} => {@Model.GetInternalFullEnumName()}.{property.GetCSharpValue()},";
    <text>@entry
    </text>
}
 
   @*  IpaffsAccompanyingDocumentDocumentTypeEnum.AirWaybill => Model.Ipaffs.IpaffsAccompanyingDocumentDocumentTypeEnum.AirWaybill,
    _ => throw new ArgumentOutOfRangeException(nameof(from), from, null) *@
};
}
        

@*   var to = new @Model.GetInternalFullEnumName() ();
    @foreach (var property in Model.Values)
    {
       
    } *@
}


