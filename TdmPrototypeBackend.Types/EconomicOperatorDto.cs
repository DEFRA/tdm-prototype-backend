
using JsonApiDotNetCore.Resources.Annotations;
using Newtonsoft.Json;
using TdmPrototypeBackend.Types;


namespace TdmDataModel;

    /// <summary>
    /// An organisation as part of the DEFRA system
    /// </summary>
public partial class EconomicOperatorDto  {


        /// <summary>
        /// The unique identifier of this organisation
        /// </summary>
        [Attr]
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public string Id { get; set; }
    
        /// <summary>
        /// Type of organisation
        /// </summary>
        [Attr]
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string _Type { get; set; }
    
        /// <summary>
        /// Status of organisation
        /// </summary>
        [Attr]
        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }
    
        /// <summary>
        /// Name of organisation
        /// </summary>
        [Attr]
        [JsonProperty("companyName", NullValueHandling = NullValueHandling.Ignore)]
        public string CompanyName { get; set; }
    
        /// <summary>
        /// Individual name
        /// </summary>
        [Attr]
        [JsonProperty("individualName", NullValueHandling = NullValueHandling.Ignore)]
        public string IndividualName { get; set; }
    
        /// <summary>
        /// Address of economic operator
        /// </summary>
        [Attr]
        [JsonProperty("address", NullValueHandling = NullValueHandling.Ignore)]
        public object Address { get; set; }
    
        /// <summary>
        /// Approval Number which identifies an Economic Operator unambiguously per type of organisation per country.
        /// </summary>
        [Attr]
        [JsonProperty("approvalNumber", NullValueHandling = NullValueHandling.Ignore)]
        public string ApprovalNumber { get; set; }
    
        /// <summary>
        /// Optional Business General Number, often named Aggregation Code, which identifies an Economic Operator.
        /// </summary>
        [Attr]
        [JsonProperty("otherIdentifier", NullValueHandling = NullValueHandling.Ignore)]
        public string OtherIdentifier { get; set; }
    
        /// <summary>
        /// Traces Id of the economic operator generated by IPAFFS
        /// </summary>
        [Attr]
        [JsonProperty("tracesId", NullValueHandling = NullValueHandling.Ignore)]
        public int TracesId { get; set; }
    
}


