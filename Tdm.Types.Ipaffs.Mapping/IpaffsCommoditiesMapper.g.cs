//------------------------------------------------------------------------------
// <auto-generated>
	//     This code was generated from a template.
	//
	//     Manual changes to this file may cause unexpected behavior in your application.
	//     Manual changes to this file will be overwritten if the code is regenerated.
	//
//</auto-generated>
//------------------------------------------------------------------------------
#nullable enable


namespace Tdm.Types.Ipaffs;

public static class IpaffsCommoditiesMapper
{
	public static Tdm.Model.Ipaffs.IpaffsCommodities Map(Tdm.Types.Ipaffs.IpaffsCommodities from)
	{
	if(from is null)
	{
		return default!;
	}
		var to = new Tdm.Model.Ipaffs.IpaffsCommodities ();
to.GmsDeclarationAccepted = from.GmsDeclarationAccepted;
            to.ConsignedCountryInChargeGroup = from.ConsignedCountryInChargeGroup;
            to.TotalGrossWeight = from.TotalGrossWeight;
            to.TotalNetWeight = from.TotalNetWeight;
            to.TotalGrossVolume = from.TotalGrossVolume;
            to.TotalGrossVolumeUnit = from.TotalGrossVolumeUnit;
            to.NumberOfPackages = from.NumberOfPackages;
            to.Temperature = from.Temperature;
            to.NumberOfAnimals = from.NumberOfAnimals;
            to.CommodityComplements = from?.CommodityComplements?.Select(x => IpaffsCommodityComplementMapper.Map(x)).ToArray();
                to.ComplementParameterSets = from?.ComplementParameterSets?.Select(x => IpaffsComplementParameterSetMapper.Map(x)).ToArray();
                to.IncludeNonAblactedAnimals = from.IncludeNonAblactedAnimals;
            to.CountryOfOrigin = from.CountryOfOrigin;
            to.CountryOfOriginIsPodCountry = from.CountryOfOriginIsPodCountry;
            to.IsLowRiskArticle72Country = from.IsLowRiskArticle72Country;
            to.RegionOfOrigin = from.RegionOfOrigin;
            to.ConsignedCountry = from.ConsignedCountry;
            to.AnimalsCertifiedAs = from.AnimalsCertifiedAs;
            to.CommodityIntendedFor = IpaffsCommoditiesCommodityIntendedForEnumMapper.Map(from?.CommodityIntendedFor);
                	return to;
	}
}

